1. Старался приблизиться к тому, что было на видео https://www.youtube.com/watch?v=gcQ2SoQ0Yr8&ab_channel=NintendoMovies.
 Какие-то моменты, которых не было делал так, как считал нужным, типа кнопки Restart и т.д.
2. DI Containter не использовал, прокидывал все зависимости вручную. Прокидывал объекты в основном сами по себе,
 а не через приведение к интерфейсу, так как тесты к проекту писать не планировал, поэтому на слабой связности кода сильно не заморачивался. Было бы больше времени - 
можно было бы и через DI container и тесты написать. А так, получился такой вот pure DI =)
3. На мой взгляд на такого рода проект хорошо бы лег ECS. Тут короткий игровой цикл, нет каких-то длинных цепочек зависимостей, но так как вы у себя его не используете, я тоже решил
не использовать.
4. Старался применять композицию вместо наследования. На мой взгляд это лучше, так как логика растет в ширину, а не в глубину, это больше в сторону single responsibility и больше в 
сторону тестируемости.
5. UI manager написал в последнюю очередь, он супер простой, там нечего даже смотреть. Просто, чтобы открыть окно.
6. Логика пингвинов сделана через самописную state machine. Можно было бы конечно взять готовое решение и на проде так и нужно было бы скорее всего сделать, но это же тестовоe.
7. Первый персонаж управляется игроком, остальные компьютером. У компьютерных персонажей логика простая - бежать к ближайшему пингвину.
8. Для UI по хорошему заиспользовать какой-нибудь паттерн, может что-то из MV* family, на UI в референсе слишком простой и на это уже времени было маловато.
9. Все основные настройки есть в папке GameSettings
